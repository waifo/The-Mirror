{"version":3,"sources":["components/Common/Button.js","components/Common/Anchor.js","components/Common/Colors.js","components/Common/Image.js","components/Common/Heading.js","components/Common/Tag.js","components/Common/Card.js","components/Common/MediaQuery.js","components/Common/Icons.js","components/Spinner/index.js","font/TitilliumWeb-Regular.ttf","font/TitilliumWeb-Light.ttf","font/TitilliumWeb-ExtraLight.ttf","components/Header/index.js","components/Footer/index.js","routes/index.js","graphql/index.js","App.js","index.js"],"names":["Normal","css","Inverted","ButtonContainer","styled","button","props","inverted","Button","children","otherProps","Anchor","a","Colors","Black","BlueNight","GoodNightBlack","White","ClearChillBlue","ShadowedSteelGrey","SwedishLightGrey","LondonSquareGrey","SunsetOrange","DarkPeriwinkleBlue","Image","img","width","height","h1","h2","H3","h3","H4","h4","ContentHeading","h5","h6","ContentHeadingLight","Tag","div","CardContainer","Card","thumbnail","content","src","mediaQuery","mobile","cls","tablet","desktop","fullHD","SpinnerOverlay","SpinnerContainer","Spinner","module","exports","HeaderContainer","header","Navbar","nav","LogoContanier","HeaderLinkContainer","HeaderAnchor","Header","FooterContainer","Footer","Home","lazy","Routes","fallback","exact","path","component","httpLink","createHttpLink","uri","cache","InMemoryCache","client","ApolloClient","link","GlobalStyle","createGlobalStyle","TitilliumWebRegular","TitilliumWebLight","TitilliumWebExtraLight","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"stCAGA,IAAMA,EAASC,YAAH,KAUNC,EAAWD,YAAH,KAURE,EAAkBC,IAAOC,OAAV,KACjB,SAACC,GAAD,OAAYA,EAAMC,SAAWL,EAAWF,KAa/BQ,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAaC,EAAhB,mCACpB,kBAACP,EAAoBO,EAAaD,I,qHCpC7B,IAAME,EAASP,IAAOQ,EAAV,KCFNC,EAAS,CACpBC,MAAO,UACPC,UAAW,UACXC,eAAgB,UAChBC,MAAO,UACPC,eAAgB,UAChBC,kBAAmB,UACnBC,iBAAkB,UAClBC,iBAAkB,UAClBC,aAAc,UACdC,mBAAoB,W,8ICRf,IAAMC,EAAQpB,IAAOqB,IAAV,KACP,SAACnB,GAAD,OAAYA,EAAMoB,MAAQpB,EAAMoB,MAAQ,UACvC,SAACpB,GAAD,OAAYA,EAAMqB,OAASrB,EAAMqB,OAAS,U,mqBCDpCvB,IAAOwB,GAAV,KACGxB,IAAOyB,GAAV,KADR,IAEMC,EAAK1B,IAAO2B,GAAV,KACFC,EAAK5B,IAAO6B,GAAV,KAIFC,GAHK9B,IAAO+B,GAAV,KACG/B,IAAOgC,GAAV,KAEehC,YAAO0B,EAAP1B,CAAH,IAELS,EAAOM,kBAClBN,EAAOI,QAILoB,EAAsBjC,YAAO4B,EAAP5B,CAAH,IACrBS,EAAOC,O,0QCfX,IAAMwB,EAAMlC,IAAOmC,IAAV,IASL1B,EAAOI,O,+ICPlB,IAAMuB,EAAgBpC,IAAOmC,IAAV,IACG1B,EAAOO,kBAIhBqB,EAAO,SAAC,GAAiB,IAC9BC,EAD6B,EAAdC,QACfD,UACN,OACE,kBAACF,EAAD,KACE,kBAAChB,EAAD,CAAOoB,IAAKF,M,skBCSX,IAAMG,EAAa,CACxBC,OAAQ,SAACC,GAAD,OACN9C,YADO,IAGD8C,IAGRC,OAAQ,SAACD,GAAD,OACN9C,YADO,IAGD8C,IAGRE,QAAS,SAACF,GAAD,OACP9C,YADQ,IAGF8C,IAGRG,OAAQ,SAACH,GAAD,OACN9C,YADO,IAGD8C,K,8JC1CU3C,IAAOmC,IAAV,M,oqBCAjB,IAAMY,EAAiB/C,IAAOmC,IAAV,KAQda,EAAmBhD,IAAOmC,IAAV,KA0BPc,IANC,kBACd,kBAACF,EAAD,KACE,kBAACC,EAAD,S,mBCjCJE,EAAOC,QAAU,IAA0B,kD,mBCA3CD,EAAOC,QAAU,IAA0B,gD,mBCA3CD,EAAOC,QAAU,IAA0B,qD,syBCK3C,IAAMC,EAAkBpD,IAAOqD,OAAV,IACC5C,IAAOM,mBAIvBuC,EAAStD,IAAOuD,IAAV,KAMNC,EAAgBxD,IAAOmC,IAAV,KAGbsB,EAAsBzD,IAAOmC,IAAV,KAMnBuB,EAAe1D,YAAOO,IAAPP,CAAH,IAGPS,IAAOI,OAeH8C,EAbA,kBACb,kBAACP,EAAD,KACE,kBAACE,EAAD,KACE,kBAACE,EAAD,aACA,kBAACC,EAAD,KACE,kBAACC,EAAD,aACA,kBAACA,EAAD,iBACA,kBAACA,EAAD,kB,kLChCR,IAAME,EAAkB5D,IAAOmC,IAAV,IACV1B,IAAOI,MACIJ,IAAOM,mBAQd8C,EAFA,kBAAM,kBAACD,EAAD,gB,QCNfE,EAAOC,gBAAK,kBAAM,sDAcTC,EAZA,kBACb,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUC,SAAU,kBAAChB,EAAA,EAAD,OAClB,kBAAC,IAAD,CAAOiB,OAAO,EAAMC,KAAK,IAAIC,UAAWN,MAG5C,kBAAC,EAAD,Q,wBCbEO,EAAWC,YAAe,CAC9BC,IAAK,yCAGDC,EAAQ,IAAIC,IAOHC,EALA,IAAIC,IAAa,CAC9BC,KAAMP,EACNG,U,gnBCKF,IAAMK,EAAcC,YAAH,IAMHC,IAMAC,IAMAC,IAMOxE,IAAOI,OAiBbqE,MAbf,WACE,OACE,kBAAC,IAAD,CAAgBR,OAAQA,GACtB,kBAAC,IAAD,KACE,yBAAKS,UAAU,OACb,kBAACN,EAAD,MACA,kBAAC,EAAD,UC9CVO,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.79b90c90.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Normal = css`\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\nconst Inverted = css`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\nconst ButtonContainer = styled.button`\r\n  ${(props) => (props.inverted ? Inverted : Normal)}\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 12;\r\n  font-weight: bolder;\r\n  margin: 5px;\r\n  &:hover {\r\n  }\r\n`;\r\n\r\nexport const Button = ({ children, ...otherProps }) => (\r\n  <ButtonContainer {...otherProps}>{children}</ButtonContainer>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Anchor = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n`;\r\n","export const Colors = {\r\n  Black: \"#000000\",\r\n  BlueNight: \"#2f3640\",\r\n  GoodNightBlack: \"#485460\",\r\n  White: \"#FFFFFF\",\r\n  ClearChillBlue: \"#1B9CFC\",\r\n  ShadowedSteelGrey: \"#4b4b4b\",\r\n  SwedishLightGrey: \"#D2DAE2\",\r\n  LondonSquareGrey: \"#808e9b\",\r\n  SunsetOrange: \"#FF5E57\",\r\n  DarkPeriwinkleBlue: \"#575FcF\",\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"100%\")};\r\n  border-radius: 5px;\r\n  opacity: 0.9;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"./\";\r\n\r\nexport const H1 = styled.h1``;\r\nexport const H2 = styled.h2``;\r\nexport const H3 = styled.h3``;\r\nexport const H4 = styled.h4``;\r\nexport const H5 = styled.h5``;\r\nexport const H6 = styled.h6``;\r\n\r\nexport const ContentHeading = styled(H3)`\r\n  text-align: left;\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  color: ${Colors.White};\r\n  line-height: 45px;\r\n`;\r\n\r\nexport const ContentHeadingLight = styled(H4)`\r\n  color: ${Colors.Black};\r\n  font-size: 18px;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"./Colors\";\r\n\r\nexport const Tag = styled.div`\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 10px;\r\n  display: inline-block;\r\n  text-align: center;\r\n  width: 70px;\r\n  height: 20px;\r\n  background-color: rgba(27, 156, 252, 0.6);\r\n  color: ${Colors.White};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Colors, Image } from \"./\";\r\n\r\nconst CardContainer = styled.div`\r\n  background-color: ${Colors.SwedishLightGrey};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nexport const Card = ({ content }) => {\r\n  let { thumbnail } = content;\r\n  return (\r\n    <CardContainer>\r\n      <Image src={thumbnail} />\r\n    </CardContainer>\r\n  );\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\n// const size = {\r\n//   mobileS: \"320px\",\r\n//   mobileM: \"375px\",\r\n//   mobileL: \"425px\",\r\n//   tablet: \"768px\",\r\n//   laptop: \"1024px\",\r\n//   laptopL: \"1440px\",\r\n//   desktop: \"2560px\",\r\n// };\r\n\r\n// export const device = {\r\n//   mobileS: `(min-width: ${size.mobileS})`,\r\n//   mobileM: `(min-width: ${size.mobileM})`,\r\n//   mobileL: `(min-width: ${size.mobileL})`,\r\n//   tablet: `(min-width: ${size.tablet})`,\r\n//   laptop: `(min-width: ${size.laptop})`,\r\n//   laptopL: `(min-width: ${size.laptopL})`,\r\n//   desktop: `(min-width: ${size.desktop})`,\r\n//   desktopL: `(min-width: ${size.desktop})`,\r\n// };\r\n\r\nexport const mediaQuery = {\r\n  mobile: (cls) =>\r\n    css`\r\n      @media (max-width: 785px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n  tablet: (cls) =>\r\n    css`\r\n      @media (min-width: 786px) and (max-width: 1079px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n  desktop: (cls) =>\r\n    css`\r\n      @media (min-width: 1080px) and (max-width: 1343px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n  fullHD: (cls) =>\r\n    css`\r\n      @media (min-width: 1344px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Icon = styled.div`\r\n  display: inline-block;\r\n  border: 1px solid white;\r\n  width: 50px;\r\n  height: 30px;\r\n`;\r\n\r\nexport const FacebookIcon = ({ height, width, color }) => (\r\n  <svg height={height} width={width}>\r\n    <symbol id=\"icon-facebook\" viewBox=\"0 0 32 32\">\r\n      <path\r\n        style={{ fill: color }}\r\n        d=\"M19 6h5v-6h-5c-3.86 0-7 3.14-7 7v3h-4v6h4v16h6v-16h5l1-6h-6v-3c0-0.542 0.458-1 1-1z\"\r\n      ></path>\r\n    </symbol>\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Spinner = () => (\r\n  <SpinnerOverlay>\r\n    <SpinnerContainer />\r\n  </SpinnerOverlay>\r\n);\r\n\r\nexport default Spinner;\r\n","module.exports = __webpack_public_path__ + \"static/media/TitilliumWeb-Regular.ed1d014b.ttf\";","module.exports = __webpack_public_path__ + \"static/media/TitilliumWeb-Light.edc21ba4.ttf\";","module.exports = __webpack_public_path__ + \"static/media/TitilliumWeb-ExtraLight.f291df8d.ttf\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Anchor, Colors } from \"../Common\";\r\n\r\nconst HeaderContainer = styled.header`\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  padding: 0px 10px;\r\n  font-weight: 600;\r\n`;\r\nconst Navbar = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst LogoContanier = styled.div`\r\n  flex-grow: 5;\r\n`;\r\nconst HeaderLinkContainer = styled.div`\r\n  flex-grow: 10;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst HeaderAnchor = styled(Anchor)`\r\n  margin: 5px 10px;\r\n  line-height: 30px;\r\n  color: ${Colors.White};\r\n`;\r\nconst Header = () => (\r\n  <HeaderContainer>\r\n    <Navbar>\r\n      <LogoContanier>Logo</LogoContanier>\r\n      <HeaderLinkContainer>\r\n        <HeaderAnchor>Home</HeaderAnchor>\r\n        <HeaderAnchor>About Us</HeaderAnchor>\r\n        <HeaderAnchor>Login</HeaderAnchor>\r\n      </HeaderLinkContainer>\r\n    </Navbar>\r\n  </HeaderContainer>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Colors } from \"../Common\";\r\n\r\nconst FooterContainer = styled.div`\r\n  color: ${Colors.White};\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  text-align: center;\r\n  line-height: 40px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst Footer = () => <FooterContainer>Footer</FooterContainer>;\r\n\r\nexport default Footer;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Spinner from \"../components/Spinner\";\r\n\r\nconst Home = lazy(() => import(\"../pages/home\"));\r\n\r\nconst Routes = () => (\r\n  <div>\r\n    <Header />\r\n    <Switch>\r\n      <Suspense fallback={<Spinner />}>\r\n        <Route exact={true} path=\"/\" component={Home} />\r\n      </Suspense>\r\n    </Switch>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import { createHttpLink } from \"apollo-link-http\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloClient } from \"apollo-boost\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://the-mirror.herokuapp.com/api\",\r\n});\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache,\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { Colors } from \"./components/Common\";\r\nimport Routes from \"./routes\";\r\nimport client from \"./graphql\";\r\n\r\n// import Header from \"./components/Header\";\r\n// import Footer from \"./components/Footer\";\r\n// import { MainContentSection, SubContent } from \"./components/Layout\";\r\n\r\nimport TitilliumWebRegular from \"./font/TitilliumWeb-Regular.ttf\";\r\nimport TitilliumWebLight from \"./font/TitilliumWeb-Light.ttf\";\r\nimport TitilliumWebExtraLight from \"./font/TitilliumWeb-ExtraLight.ttf\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody{\r\n  padding:0px;\r\n  margin:0px;\r\n  @font-face{\r\n    font-family: Titillium Web Regular;\r\n    src:url(${TitilliumWebRegular});\r\n    font-weight:400;\r\n    font-style:normal;\r\n  };\r\n  @font-face{\r\n    font-family: Titillium Web Light;\r\n    src:url(${TitilliumWebLight});\r\n    font-weight:300;\r\n    font-style:normal;\r\n  };\r\n  @font-face{\r\n    font-family: Titillium Web Extra Light;\r\n    src:url(${TitilliumWebExtraLight});\r\n    font-weight:200;\r\n    font-style:normal;\r\n  };\r\n\r\n  font-family: Titillium Web Regular, Sans Serif ;\r\n  background-color:${Colors.White}\r\n}\r\n`;\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <GlobalStyle />\r\n          <Routes />\r\n        </div>\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n// serviceWorker.unregister();\r\n"],"sourceRoot":""}