{"version":3,"sources":["graphql/queries/stories/index.js","components/Spinner/index.js","components/Common/Button.js","components/Common/Anchor.js","components/Common/Colors.js","components/Common/Image.js","components/Common/Heading.js","components/Common/Tag.js","components/Common/Card.js","components/Common/MediaQuery.js","components/Common/Icons.js","components/Common/Shimmer.js","font/TitilliumWeb-Regular.ttf","font/TitilliumWeb-Light.ttf","font/TitilliumWeb-ExtraLight.ttf","components/Header/index.js","components/Footer/index.js","components/Adsense/index.js","components/Layout/MainContnent.js","components/Layout/SubContent.js","components/Layout/RecentPosts.js","components/Layout/EditorsChoice.js","pages/home/index.js","routes/index.js","graphql/index.js","App.js","serviceWorker.js","index.js"],"names":["gql","GET_STORY_BY_ID","GET_PRIMARY_STORIES","GET_PRIMARY_AND_RECENT_STORIES","GET_PAGINATED_STORIES","SpinnerOverlay","styled","div","SpinnerContainer","Spinner","Normal","css","Inverted","ButtonContainer","button","props","inverted","Button","children","otherProps","Anchor","a","Colors","Black","BlueNight","GoodNightBlack","White","GreyWhite","ClearChillBlue","HintOfPensiveGrey","ShadowedSteelGrey","ShadowedSteelGreyRGBA","SwedishLightGrey","LondonSquareGrey","SunsetOrange","DarkPeriwinkleBlue","LoveRed","ImageEle","img","width","height","customCss","Image","imgArr","src","split","imgPath","imgType","media","srcset","H1","h1","H3","h2","h3","H4","h4","ContentHeading","h5","h6","ContentHeadingLight","ContentHeadingH3White","Tag","CardContainer","ShortDesc","Card","content","thumbnail","shortDesc","loading","mediaQuery","mobile","cls","tablet","desktop","fullHD","LoveIcon","fillColor","viewBox","d","fill","placeholderShimmer","keyframes","ShimmerCss","ShimmerContainer","customStyle","Shimmer","count","shimmerArray","i","push","module","exports","HeaderContainer","header","Navbar","nav","LogoContanier","HeaderLinkContainer","HeaderAnchor","Header","FooterContainer","footer","FooterContent","AboutContainer","ContactContainer","ContactInfo","SocialIcons","HR","hr","LoveText","span","Footer","React","Component","MainContentSectionContainer","ContentTitle","StoryHeading","MainContentSection","story","_id","category","history","createdBy","createdAt","useHistory","match","useRouteMatch","onClick","url","RecentPostContainer","CardElement","RecentPosts","useQuery","variables","first","after","data","error","fetchMore","stories","edges","map","index","length","key","node","endCursor","pageInfo","updateQuery","prevResult","fetchMoreResult","EditorsChoiceContainer","EditorsChoiceCard","Contents","Meta","EditorsChoice","primaryStories","HomeContainer","MainSection","RecentStoriesContainer","Home","query","console","log","StoryDetail","lazy","Routes","exact","path","component","fallback","render","httpLink","createHttpLink","uri","cache","InMemoryCache","client","ApolloClient","link","GlobalStyle","createGlobalStyle","TitilliumWebRegular","TitilliumWebLight","TitilliumWebExtraLight","ReactGA","initialize","debug","pageview","window","location","pathname","search","App","className","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","process","Sentry","dsn","SENTRY_CLIENT_DSN","ReactDOM","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7bd0d60d.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const GET_ALL_STORIES = gql`\r\n  {\r\n    allStories {\r\n      category\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_STORY_BY_ID = gql`\r\n  query getStoryById($ID: String!) {\r\n    storyById(ID: $ID) {\r\n      category\r\n      shortDesc\r\n      fullStory\r\n      createdBy\r\n      thumbnail\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PRIMARY_STORIES = gql`\r\n  {\r\n    primaryStories {\r\n      category\r\n      shortDesc\r\n      createdBy\r\n      thumbnail\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\nexport const GET_EDITOR_STORIES = gql`\r\n  {\r\n    editiorStories {\r\n      category\r\n      shortDesc\r\n      createdBy\r\n      thumbnail\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PRIMARY_AND_RECENT_STORIES = gql`\r\n  {\r\n    primaryStories {\r\n      _id\r\n      category\r\n      shortDesc\r\n      createdBy\r\n      thumbnail\r\n      createdAt\r\n    }\r\n    recentStories {\r\n      _id\r\n      category\r\n      shortDesc\r\n      createdBy\r\n      thumbnail\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAGINATED_STORIES = gql`\r\n  query getPaginatedStories($first: Int!, $after: ID) {\r\n    stories(first: $first, after: $after) {\r\n      edges {\r\n        node {\r\n          _id\r\n          category\r\n          shortDesc\r\n          thumbnail\r\n          createdAt\r\n        }\r\n      }\r\n      pageInfo {\r\n        endCursor\r\n        hasNextPage\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst SpinnerOverlay = styled.div`\r\n  height: 60vh;\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst SpinnerContainer = styled.div`\r\n  display: inline-block;\r\n  width: 50px;\r\n  height: 50px;\r\n  border: 3px solid rgba(195, 195, 195, 0.6);\r\n  border-radius: 50%;\r\n  border-top-color: #636767;\r\n  animation: spin 1s ease-in-out infinite;\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n  @-webkit-keyframes spin {\r\n    to {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nconst Spinner = () => (\r\n  <SpinnerOverlay>\r\n    <SpinnerContainer />\r\n  </SpinnerOverlay>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nconst Normal = css`\r\n  background-color: black;\r\n  color: white;\r\n  border: none;\r\n  &:hover {\r\n    background-color: white;\r\n    color: black;\r\n    border: 1px solid black;\r\n  }\r\n`;\r\nconst Inverted = css`\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n  &:hover {\r\n    background-color: black;\r\n    color: white;\r\n    border: none;\r\n  }\r\n`;\r\nconst ButtonContainer = styled.button`\r\n  ${(props) => (props.inverted ? Inverted : Normal)}\r\n  min-width: 165px;\r\n  width: auto;\r\n  height: 50px;\r\n  letter-spacing: 0.5px;\r\n  padding: 0 35px 0 35px;\r\n  font-size: 12;\r\n  font-weight: bolder;\r\n  margin: 5px;\r\n  &:hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Button = ({ children, ...otherProps }) => (\r\n  <ButtonContainer {...otherProps}>{children}</ButtonContainer>\r\n);\r\n","import styled from \"styled-components\";\r\n\r\nexport const Anchor = styled.a`\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n`;\r\n","export const Colors = {\r\n  Black: \"#000000\",\r\n  BlueNight: \"#2f3640\",\r\n  GoodNightBlack: \"#485460\",\r\n  White: \"#FFFFFF\",\r\n  GreyWhite: \"rgba(255, 255, 255, 0.7)\",\r\n  ClearChillBlue: \"#1B9CFC\",\r\n  HintOfPensiveGrey: \"#DCDDE1\",\r\n  ShadowedSteelGrey: \"#4b4b4b\",\r\n  ShadowedSteelGreyRGBA: \"rgba(75,75,75,0.6)\",\r\n  SwedishLightGrey: \"#D2DAE2\",\r\n  LondonSquareGrey: \"#808e9b\",\r\n  SunsetOrange: \"#FF5E57\",\r\n  DarkPeriwinkleBlue: \"#575FcF\",\r\n  LoveRed: \"#DC354\",\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ImageEle = styled.img`\r\n  width: ${(props) => (props.width ? props.width : \"100%\")};\r\n  height: ${(props) => (props.height ? props.height : \"100%\")};\r\n  border-radius: 5px;\r\n  opacity: 0.9;\r\n  ${(props) => (props.customCss ? props.customCss : null)};\r\n`;\r\n\r\nexport const Image = (props) => {\r\n  let imgArr = props.src.split(\".\");\r\n  let imgPath = imgArr[0];\r\n  let imgType = imgArr[1];\r\n\r\n  return (\r\n    <picture>\r\n      <source\r\n        media=\"(max-width:480px)\"\r\n        srcset={`${imgPath},w_480.${imgType}`}\r\n      />\r\n      <source\r\n        media=\"(max-width:768px)\"\r\n        srcset={`${imgPath},w_768.${imgType}`}\r\n      />\r\n      <source\r\n        media=\"(max-width:1024px)\"\r\n        srcset={`${imgPath},w_1024.${imgType}`}\r\n      />\r\n      <source\r\n        media=\"(max-width:1200px)\"\r\n        srcset={`${imgPath},w_1200.${imgType}`}\r\n      />\r\n      <source\r\n        media=\"(max-width:1400px)\"\r\n        srcset={`${imgPath},w_1400.${imgType}`}\r\n      />\r\n      <ImageEle srcset={props.src} {...props} />\r\n    </picture>\r\n  );\r\n};\r\n\r\n// sizes: \"(max-width: 1000px) 100vw, 1000px\";\r\n// srcset: \"covid_z24xur,w_200.jpg 200w,\r\n// covid_z24xur,w_508.jpg 508w,\r\n// covid_z24xur,w_721.jpg 721w,\r\n// covid_z24xur,w_901.jpg 901w,\r\n// covid_z24xur,w_1000.jpg 1000w\";\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"./\";\r\n\r\nexport const H1 = styled.h1``;\r\nexport const H2 = styled.h2``;\r\nexport const H3 = styled.h3``;\r\nexport const H4 = styled.h4``;\r\nexport const H5 = styled.h5``;\r\nexport const H6 = styled.h6``;\r\n\r\nexport const ContentHeading = styled(H3)`\r\n  text-align: left;\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  color: ${Colors.White};\r\n  line-height: 45px;\r\n`;\r\n\r\nexport const ContentHeadingLight = styled(H4)`\r\n  color: ${Colors.Black};\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const ContentHeadingH3White = styled(H3)`\r\n  color: ${Colors.White};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Colors } from \"./Colors\";\r\n\r\nexport const Tag = styled.div`\r\n  position: absolute;\r\n  left: 10px;\r\n  top: 10px;\r\n  display: inline-block;\r\n  text-align: center;\r\n  height: 25px;\r\n  padding: 0px 5px;\r\n  background-color: ${Colors.ShadowedSteelGreyRGBA};\r\n  color: ${Colors.White};\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Colors, Image } from \"./\";\r\n\r\nconst CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 3fr 1fr;\r\n  justify-items: center;\r\n  height: 300px;\r\n  background-color: ${Colors.SwedishLightGrey};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.06);\r\n`;\r\n\r\nconst ShortDesc = styled.div`\r\n  align-self: center;\r\n`;\r\n\r\nexport const Card = ({ content }) => {\r\n  let { thumbnail, shortDesc } = content;\r\n  return (\r\n    <CardContainer>\r\n      <Image src={thumbnail} loading=\"lazy\" />\r\n      <ShortDesc>{shortDesc}</ShortDesc>\r\n    </CardContainer>\r\n  );\r\n};\r\n","import { css } from \"styled-components\";\r\n\r\n// const size = {\r\n//   mobileS: \"320px\",\r\n//   mobileM: \"375px\",\r\n//   mobileL: \"425px\",\r\n//   tablet: \"768px\",\r\n//   laptop: \"1024px\",\r\n//   laptopL: \"1440px\",\r\n//   desktop: \"2560px\",\r\n// };\r\n\r\n// export const device = {\r\n//   mobileS: `(min-width: ${size.mobileS})`,\r\n//   mobileM: `(min-width: ${size.mobileM})`,\r\n//   mobileL: `(min-width: ${size.mobileL})`,\r\n//   tablet: `(min-width: ${size.tablet})`,\r\n//   laptop: `(min-width: ${size.laptop})`,\r\n//   laptopL: `(min-width: ${size.laptopL})`,\r\n//   desktop: `(min-width: ${size.desktop})`,\r\n//   desktopL: `(min-width: ${size.desktop})`,\r\n// };\r\n\r\nexport const mediaQuery = {\r\n  mobile: (cls) =>\r\n    css`\r\n      @media (max-width: 785px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n  tablet: (cls) =>\r\n    css`\r\n      @media (min-width: 786px) and (max-width: 1079px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n  desktop: (cls) =>\r\n    css`\r\n      @media (min-width: 1080px) and (max-width: 1343px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n  fullHD: (cls) =>\r\n    css`\r\n      @media (min-width: 1344px) {\r\n        ${cls};\r\n      }\r\n    `,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Icon = styled.div`\r\n  display: inline-block;\r\n  border: 1px solid white;\r\n  width: 50px;\r\n  height: 30px;\r\n`;\r\n\r\nexport const Facebook = ({ height, width, color }) => (\r\n  <svg height={height} width={width}>\r\n    <symbol id=\"icon-facebook\" viewBox=\"0 0 32 32\">\r\n      <path\r\n        style={{ fill: color }}\r\n        d=\"M19 6h5v-6h-5c-3.86 0-7 3.14-7 7v3h-4v6h4v16h6v-16h5l1-6h-6v-3c0-0.542 0.458-1 1-1z\"\r\n      ></path>\r\n    </symbol>\r\n  </svg>\r\n);\r\n\r\nexport const FacebookIcon = ({ width, height, fillColor, bgColor }) => (\r\n  <svg\r\n    width={width}\r\n    height={height}\r\n    viewBox=\"0 0 1792 1792\"\r\n    style={{ \"background-color\": bgColor }}\r\n  >\r\n    <path\r\n      fill={fillColor}\r\n      d=\"M1376 128q119 0 203.5 84.5t84.5 203.5v960q0 119-84.5 203.5t-203.5 84.5h-188v-595h199l30-232h-229v-148q0-56 23.5-84t91.5-28l122-1v-207q-63-9-178-9-136 0-217.5 80t-81.5 226v171h-200v232h200v595h-532q-119 0-203.5-84.5t-84.5-203.5v-960q0-119 84.5-203.5t203.5-84.5h960z\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const TwitterIcon = ({ width, height, fillColor, bgColor }) => (\r\n  <svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    width={width}\r\n    height={height}\r\n    viewBox=\"0 0 40 39\"\r\n    style={{ \"background-color\": bgColor }}\r\n  >\r\n    <path\r\n      fill={fillColor}\r\n      fill-rule=\"nonzero\"\r\n      d=\"M3171.954,199.651 L3145.757,199.651 C3142.298,199.651 3139.484,196.843 3139.484,193.391 L3139.484,167.26 C3139.484,163.808 3142.298,161 3145.757,161 L3171.954,161 C3175.412,161 3178.226,163.808 3178.226,167.26 L3178.226,193.392 C3178.226,196.844 3175.412,199.651 3171.954,199.651 Z M3168.95909,172.626437 C3168.01646,171.624223 3166.68822,171 3165.21658,171 C3162.35716,171 3160.03915,173.356611 3160.03915,176.263638 C3160.03915,176.643569 3160.07874,177.0141 3160.15396,177.371196 C3155.8786,177.101174 3152.14005,174.816243 3149.84604,171.43925 C3149.70538,172.058018 3149.63103,172.702594 3149.63103,173.364823 C3149.63103,175.527297 3150.42377,177.501535 3151.72992,179.003555 C3150.81877,178.815045 3149.96138,178.476181 3149.1839,178.013555 C3149.78016,180.300603 3151.28889,182.210123 3153.2899,183.314943 C3153.01082,183.343488 3152.7277,183.358107 3152.44123,183.358107 C3151.95811,183.358107 3151.48454,183.31653 3151.0238,183.236704 C3152.11423,184.906737 3153.76869,186.163151 3155.71085,186.725019 C3154.2461,188.001034 3152.34298,188.771853 3150.26278,188.771853 C3149.65241,188.771853 3149.05728,188.705489 3148.484,188.57947 C3150.71268,190.214866 3153.44985,191.178509 3156.40841,191.178509 C3163.54338,191.178509 3169.39077,185.573968 3169.92359,178.458946 C3170.2256,177.790743 3170.39401,177.047184 3170.39401,176.263638 C3170.39401,176.038849 3170.38015,175.817351 3170.35325,175.599979 C3171.33913,175.24709 3172.10384,174.417148 3172.37926,173.382739 C3171.70414,173.883371 3170.90537,174.221982 3170.03826,174.342327 C3170.00758,174.262802 3169.97505,174.18422 3169.94072,174.106637 C3170.81027,173.465429 3171.47644,172.554969 3171.82177,171.4951 C3171.02524,172.141223 3170.03748,172.552544 3168.95909,172.626437 Z\"\r\n      transform=\"translate(-3139 -161)\"\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport const LoveIcon = ({ width, height, fillColor }) => (\r\n  <svg height={height} viewBox=\"0 -20 464 464\" width={width}>\r\n    <path\r\n      d=\"m340 0c-44.773438.00390625-86.066406 24.164062-108 63.199219-21.933594-39.035157-63.226562-63.19531275-108-63.199219-68.480469 0-124 63.519531-124 132 0 172 232 292 232 292s232-120 232-292c0-68.480469-55.519531-132-124-132zm0 0\"\r\n      fill=\"#ff6243\"\r\n    />\r\n    <path\r\n      d=\"m32 132c0-63.359375 47.550781-122.359375 108.894531-130.847656-5.597656-.769532-11.242187-1.15625025-16.894531-1.152344-68.480469 0-124 63.519531-124 132 0 172 232 292 232 292s6-3.113281 16-8.992188c-52.414062-30.824218-216-138.558593-216-283.007812zm0 0\"\r\n      fill=\"#ff5023\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport styled, { css, keyframes } from \"styled-components\";\r\n\r\nconst placeholderShimmer = keyframes`\r\n    0% {\r\n      background-position: -468px 0;\r\n    }\r\n    \r\n    100% {\r\n      background-position: 468px 0; \r\n    }\r\n  `;\r\n\r\nconst ShimmerCss = css`\r\n  background: #f6f7f8;\r\n  background-image: linear-gradient(\r\n    to right,\r\n    #f6f7f8 0%,\r\n    #edeef1 20%,\r\n    #f6f7f8 40%,\r\n    #f6f7f8 100%\r\n  );\r\n  background-repeat: no-repeat;\r\n  -webkit-animation-duration: 1s;\r\n  -webkit-animation-fill-mode: forwards;\r\n  -webkit-animation-iteration-count: infinite;\r\n  -webkit-animation-name: ${placeholderShimmer};\r\n  -webkit-animation-timing-function: linear;\r\n`;\r\n\r\nconst ShimmerContainer = styled.div`\r\n  height: ${(props) => (props.height ? props.height : 0)};\r\n  ${(props) => (props.customStyle ? props.customStyle : null)};\r\n  ${ShimmerCss};\r\n`;\r\n\r\nexport const Shimmer = ({ height, count, css }) => {\r\n  const shimmerArray = [];\r\n  for (let i = 0; i < count; i++) {\r\n    shimmerArray.push(<ShimmerContainer customStyle={css} height={height} />);\r\n  }\r\n  return shimmerArray;\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/TitilliumWeb-Regular.ed1d014b.ttf\";","module.exports = __webpack_public_path__ + \"static/media/TitilliumWeb-Light.edc21ba4.ttf\";","module.exports = __webpack_public_path__ + \"static/media/TitilliumWeb-ExtraLight.f291df8d.ttf\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Anchor, Colors } from \"../Common\";\r\n\r\nconst HeaderContainer = styled.header`\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  padding: 0px 10px;\r\n  font-weight: 600;\r\n  color: ${Colors.White};\r\n`;\r\nconst Navbar = styled.nav`\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst LogoContanier = styled.div`\r\n  flex-grow: 5;\r\n`;\r\nconst HeaderLinkContainer = styled.div`\r\n  flex-grow: 10;\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst HeaderAnchor = styled(Anchor)`\r\n  margin: 5px 10px;\r\n  line-height: 30px;\r\n`;\r\nconst Header = () => (\r\n  <HeaderContainer>\r\n    <Navbar>\r\n      <LogoContanier>Logo</LogoContanier>\r\n      <HeaderLinkContainer>\r\n        <HeaderAnchor>Home</HeaderAnchor>\r\n        <HeaderAnchor>About Us</HeaderAnchor>\r\n        <HeaderAnchor>Login</HeaderAnchor>\r\n      </HeaderLinkContainer>\r\n    </Navbar>\r\n  </HeaderContainer>\r\n);\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport {\r\n  Colors,\r\n  TwitterIcon,\r\n  ContentHeadingH3White,\r\n  LoveIcon,\r\n  mediaQuery,\r\n} from \"../Common\";\r\n\r\nconst FooterContainer = styled.footer`\r\n  color: ${Colors.GreyWhite};\r\n  background-color: ${Colors.Black};\r\n  text-align: center;\r\n`;\r\n\r\nconst FooterContent = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 2fr 1fr;\r\n  ${mediaQuery.mobile(css`\r\n    grid-template-columns: 1fr;\r\n  `)}\r\n  justify-items: center;\r\n  padding: 5px 20px 0px;\r\n  margin-top: 20px;\r\n`;\r\n\r\nconst AboutContainer = styled.div``;\r\nconst ContactContainer = styled.div``;\r\nconst ContactInfo = styled.div``;\r\nconst SocialIcons = styled.div``;\r\nconst HR = styled.hr`\r\n  border-top: 0.2px solid ${Colors.GreyWhite};\r\n  width: 90%;\r\n  margin: 50px auto;\r\n`;\r\nconst LoveText = styled.span`\r\n  color: ${Colors.White};\r\n  padding-bottom: px;\r\n`;\r\nconst Footer = () => (\r\n  <FooterContainer>\r\n    <FooterContent>\r\n      <AboutContainer>\r\n        <ContentHeadingH3White>About Us</ContentHeadingH3White>\r\n        <p>\r\n          Do you want to be even more successful? Learn to love learning and\r\n          growth. The more effort you put into improving your skills, the bigger\r\n          the payoff you will get. Realize that things will be hard at first,\r\n          but the rewards will be worth it.\r\n        </p>\r\n      </AboutContainer>\r\n\r\n      <ContactContainer>\r\n        <ContentHeadingH3White>Contact us</ContentHeadingH3White>\r\n        <ContactInfo>\r\n          <span></span>\r\n          <h5>Los angeles, United States</h5>\r\n          <p>659, Rocky beach bullevard, santa monica, Rocky beach, USA.</p>\r\n        </ContactInfo>\r\n        <ContactInfo>\r\n          <span></span>\r\n          <h5>+44 6532 986 652</h5>\r\n          <p>Mon to Fri 9am to 6 pm.</p>\r\n        </ContactInfo>\r\n      </ContactContainer>\r\n      <SocialIcons>\r\n        <ContentHeadingH3White>Social Links</ContentHeadingH3White>\r\n      </SocialIcons>\r\n    </FooterContent>\r\n    <HR />\r\n    <LoveText>\r\n      Made with{\" \"}\r\n      <LoveIcon height=\"15px\" width=\"15px\" fillColor={Colors.LoveRed} />\r\n    </LoveText>\r\n  </FooterContainer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nclass Adsense extends React.Component {\r\n  componentDidMount() {\r\n    (window.adsbygoogle = window.adsbygoogle || []).push({});\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"ad\">\r\n        <ins\r\n          className=\"adsbygoogle\"\r\n          style={{ display: \"block\" }}\r\n          data-ad-client=\"ca-pub-1138368574112081\"\r\n          data-ad-slot=\"3048716922\"\r\n          data-ad-format=\"auto\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Adsense;\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\r\n\r\nimport { Colors, Image, Tag, H4, mediaQuery, Shimmer } from \"../Common\";\r\n\r\nconst MainContentSectionContainer = styled.div`\r\n  height: 300px;\r\n  border-radius: 5px;\r\n  position: relative;\r\n  transition: opacity 0.36s ease;\r\n  &:hover {\r\n    cursor: pointer;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  &:nth-child(1) {\r\n    grid-row: 1/3;\r\n    height: 610px;\r\n  }\r\n  ${mediaQuery.mobile(css`\r\n    &:nth-child(1) {\r\n      grid-row: 1/1;\r\n      height: 300px;\r\n    }\r\n  `)}\r\n  background-color: lightgrey;\r\n`;\r\n\r\nconst ContentTitle = styled.div`\r\n  color: ${Colors.White};\r\n  position: absolute;\r\n  bottom: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  padding: 5px;\r\n  background-color: ${Colors.ShadowedSteelGreyRGBA};\r\n`;\r\nconst StoryHeading = styled(H4)`\r\n  margin: 2px;\r\n`;\r\nconst TimeStamp = styled.div`\r\n  font-family: Titillium Web Extra Light;\r\n  font-style: italic;\r\n  font-size: 10px;\r\n  margin: 10px 0px 5px 0px;\r\n`;\r\n\r\nexport const MainContentSection = ({ story }) => {\r\n  let { _id, category, shortDesc, thumbnail, createdBy, createdAt } = story;\r\n  let history = useHistory();\r\n  let match = useRouteMatch();\r\n  return (\r\n    <MainContentSectionContainer\r\n      onClick={() => history.push(`${match.url}${_id}`)}\r\n    >\r\n      <Image src={thumbnail} loading=\"lazy\" />\r\n      <Tag>{category}</Tag>\r\n      <ContentTitle>\r\n        <StoryHeading>{shortDesc}</StoryHeading>\r\n      </ContentTitle>\r\n    </MainContentSectionContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { Card, Image, H3, Colors, FacebookIcon, Icon } from \"../Common\";\r\n\r\nconst SubContentContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  grid-gap: 10px;\r\n  margin: 10px;\r\n  padding: 10px;\r\n`;\r\n\r\nconst ContentHeading = styled(H3)`\r\n  text-align: left;\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  color: ${Colors.White};\r\n  line-height: 45px;\r\n`;\r\n\r\nconst SocialPluginHeading = styled(H3)`\r\n  text-align: center;\r\n  background-color: ${Colors.ShadowedSteelGrey};\r\n  color: ${Colors.White};\r\n  line-height: 45px;\r\n`;\r\n\r\nconst SocialPluginContainer = styled.div`\r\n  background-color: ${Colors.SwedishLightGrey};\r\n  padding: 20px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n`;\r\nconst ContentContainer = styled.div``;\r\n\r\nconst CardContainer = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  grid-gap: 10px;\r\n`;\r\n\r\nconst SocialMediaContainer = styled.div``;\r\n\r\nconst AdContainer = styled.div`\r\n  background-color: ${Colors.SwedishLightGrey};\r\n  width: 100%;\r\n  height: 300px;\r\n`;\r\n\r\nconst YoutubeContainer = styled.div`\r\n  background-color: ${Colors.SwedishLightGrey};\r\n  width: 100%;\r\n  height: 232px;\r\n`;\r\n\r\nexport const SubContent = () => (\r\n  <div></div>\r\n  // <Card>\r\n  //   <Image src={Image1} />\r\n  // </Card>\r\n  // <Card>\r\n  //   <Image src={Image2} />\r\n  // </Card>\r\n  // <Card>\r\n  //   <Image src={Image3} />\r\n  // </Card>\r\n  // <Card>\r\n  //   <Image src={Image4} />\r\n  // </Card>\r\n  // <SocialMediaContainer>\r\n  //   <SocialPluginHeading>Social Plugin</SocialPluginHeading>\r\n  //   <SocialPluginContainer>\r\n  //     {/* <FacebookIcon\r\n  //       width=\"200px\"\r\n  //       height=\"100px\"\r\n  //       color=\"#010002\"\r\n  //     ></FacebookIcon> */}\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //     <Icon></Icon>\r\n  //   </SocialPluginContainer>\r\n  //   <SocialPluginHeading>Advertisement</SocialPluginHeading>\r\n  //   <AdContainer></AdContainer>\r\n  //   <SocialPluginHeading>Youtube</SocialPluginHeading>\r\n  //   <YoutubeContainer></YoutubeContainer>\r\n  // </SocialMediaContainer>\r\n);\r\n","import React, { useRef, useCallback } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nimport {\r\n  Button,\r\n  Colors,\r\n  ContentHeading,\r\n  Card,\r\n  mediaQuery,\r\n  Shimmer,\r\n} from \"../Common\";\r\nimport Spinner from \"../Spinner\";\r\nimport { GET_PAGINATED_STORIES } from \"../../graphql/queries/stories\";\r\n\r\nconst RecentPostContainer = styled.div``;\r\n\r\nconst CardContainer = styled.div`\r\n  padding: 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  ${mediaQuery.mobile(css`\r\n    grid-template-columns: 1fr 1fr;\r\n  `)}\r\n`;\r\n\r\nconst CardElement = styled.div``;\r\n\r\nconst ButtonContainer = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const RecentPosts = () => {\r\n  const { loading, data, error, fetchMore } = useQuery(GET_PAGINATED_STORIES, {\r\n    variables: { first: 10, after: \"0\" },\r\n  });\r\n  //   const observer = useRef();\r\n\r\n  const loadMore = () => {\r\n    const { endCursor } = data.stories.pageInfo;\r\n    fetchMore({\r\n      variables: { after: endCursor },\r\n      updateQuery: (prevResult, { fetchMoreResult }) => {\r\n        fetchMoreResult.stories.edges = [\r\n          ...prevResult.stories.edges,\r\n          ...fetchMoreResult.stories.edges,\r\n        ];\r\n        return fetchMoreResult;\r\n      },\r\n    });\r\n  };\r\n\r\n  // Code for infinite scroll\r\n\r\n  //   let lastStoryRef = useCallback(\r\n  //     (node) => {\r\n  //       if (loading) return <div>Loading...</div>;\r\n  //       if (observer.current) observer.current.disconnect();\r\n  //       observer.current = new IntersectionObserver((entries) => {\r\n  //         if (entries[0].isIntersecting && data.stories.pageInfo.hasNextPage) {\r\n  //           const { endCursor } = data.stories.pageInfo;\r\n  //           fetchMore({\r\n  //             variables: { after: endCursor },\r\n  //             updateQuery: (prevResult, { fetchMoreResult }) => {\r\n  //               fetchMoreResult.stories.edges = [\r\n  //                 ...prevResult.stories.edges,\r\n  //                 ...fetchMoreResult.stories.edges,\r\n  //               ];\r\n  //               return fetchMoreResult;\r\n  //             },\r\n  //           });\r\n  //         }\r\n  //       });\r\n  //       if (node) observer.current.observe(node);\r\n  //     },\r\n  //     [data]\r\n  //   );\r\n\r\n  if (error) return <div>Error</div>;\r\n  return (\r\n    <RecentPostContainer>\r\n      <ContentHeading>Recent Posts</ContentHeading>\r\n      <CardContainer>\r\n        {loading ? (\r\n          <Shimmer height=\"300px\" count={10} />\r\n        ) : (\r\n          data.stories.edges.map((story, index) => {\r\n            if (index === data.stories.edges.length - 1)\r\n              return (\r\n                //Element for Infinte scroll\r\n\r\n                //   <CardElement key={story.node.createdAt} ref={lastStoryRef}>\r\n                //     <Card content={story.node} />\r\n                //   </CardElement>\r\n\r\n                <CardElement key={story.node.createdAt}>\r\n                  <Card content={story.node} />\r\n                </CardElement>\r\n              );\r\n            else\r\n              return (\r\n                <CardElement key={story.node.createdAt}>\r\n                  <Card content={story.node} />\r\n                </CardElement>\r\n              );\r\n          })\r\n        )}\r\n      </CardContainer>\r\n      <ButtonContainer>\r\n        <Button onClick={loadMore}>More</Button>\r\n      </ButtonContainer>\r\n    </RecentPostContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nimport {\r\n  ContentHeading,\r\n  ContentHeadingLight,\r\n  Image,\r\n  Colors,\r\n  mediaQuery,\r\n  Shimmer,\r\n} from \"../Common\";\r\nimport { GET_PRIMARY_STORIES } from \"../../graphql/queries/stories\";\r\nimport Spinner from \"../Spinner\";\r\n\r\nconst EditorsChoiceContainer = styled.div``;\r\nconst EditorsChoiceCard = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr;\r\n  grid-gap: 10px;\r\n  background-color: ${Colors.SwedishLightGrey};\r\n`;\r\nconst CardContainer = styled.div`\r\n  padding: 10px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 20px 10px;\r\n  ${mediaQuery.mobile(css`\r\n    grid-template-columns: 1fr;\r\n  `)}\r\n`;\r\nconst Contents = styled.div``;\r\nconst Meta = styled.div``;\r\n\r\nexport const EditorsChoice = () => {\r\n  const { loading, data, error } = useQuery(GET_PRIMARY_STORIES);\r\n  if (error) return <div>Error</div>;\r\n  return (\r\n    <EditorsChoiceContainer>\r\n      <ContentHeading>Editors Choice</ContentHeading>\r\n      <CardContainer>\r\n        {loading ? (\r\n          <Shimmer height=\"127px\" count={6} />\r\n        ) : (\r\n          data.primaryStories.map((story) => (\r\n            <EditorsChoiceCard key={story.createdAt}>\r\n              <Image src={story.thumbnail} loading=\"lazy\" />\r\n              <Contents>\r\n                <ContentHeadingLight>{story.shortDesc}</ContentHeadingLight>\r\n\r\n                <Meta>\r\n                  <span>\r\n                    Jun 14 <span>•</span> 3 min read <span></span>\r\n                  </span>\r\n                </Meta>\r\n              </Contents>\r\n            </EditorsChoiceCard>\r\n          ))\r\n        )}\r\n      </CardContainer>\r\n    </EditorsChoiceContainer>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport Spinner from \"../../components/Spinner\";\r\nimport Adsense from \"../../components/Adsense\";\r\nimport {\r\n  MainContentSection,\r\n  SubContent,\r\n  RecentPosts,\r\n  EditorsChoice,\r\n} from \"../../components/Layout\";\r\nimport {\r\n  Colors,\r\n  H3,\r\n  Card,\r\n  Icon,\r\n  mediaQuery,\r\n  FacebookIcon,\r\n  TwitterIcon,\r\n  Shimmer,\r\n} from \"../../components/Common\";\r\n\r\nimport {\r\n  GET_ALL_STORIES,\r\n  GET_PRIMARY_AND_RECENT_STORIES,\r\n} from \"../../graphql/queries/stories\";\r\n\r\nconst HomeContainer = styled.div`\r\n  margin: 10px 0px;\r\n`;\r\nconst MainSection = styled.div`\r\n  padding: 10px;\r\n  background-color: ${Colors.White};\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.06);\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-template-rows: 1fr;\r\n  grid-auto-rows: 1frsss;\r\n  grid-column-gap: 10px;\r\n  grid-row-gap: 10px;\r\n  ${mediaQuery.mobile(css`\r\n    grid-template-columns: 1fr;\r\n  `)}\r\n`;\r\n\r\nconst ShimmerCss = css`\r\n  &:nth-child(1) {\r\n    grid-row: 1/3;\r\n    height: 610px;\r\n  }\r\n  ${mediaQuery.mobile(css`\r\n    &:nth-child(1) {\r\n      grid-row: 1/1;\r\n      height: 300px;\r\n    }\r\n  `)}\r\n`;\r\n\r\nconst RecentStoriesContainer = styled.div``;\r\n\r\nconst Home = () => (\r\n  <Query query={GET_PRIMARY_AND_RECENT_STORIES}>\r\n    {({ loading, error, data }) => {\r\n      // if (loading) return <ShimmerContainer />;\r\n      if (error) return console.log(\"Error\", error);\r\n      return (\r\n        <HomeContainer>\r\n          <MainSection>\r\n            {loading ? (\r\n              <Shimmer css={ShimmerCss} height=\"300px\" count={5} />\r\n            ) : (\r\n              data.primaryStories.map((story) => (\r\n                <MainContentSection key={story.createdAt} story={story} />\r\n              ))\r\n            )}\r\n          </MainSection>\r\n          <EditorsChoice />\r\n          <RecentStoriesContainer>\r\n            <RecentPosts />\r\n          </RecentStoriesContainer>\r\n\r\n          {/* <Adsense /> */}\r\n        </HomeContainer>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport default Home;\r\n","import React, { lazy, Suspense } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Spinner from \"../components/Spinner\";\r\nimport Home from \"../pages/home\";\r\n\r\n// const Home = lazy(() => import(\"../pages/home\"))\r\nconst StoryDetail = lazy(() => import(\"../pages/story\"));\r\n\r\nconst Routes = () => (\r\n  <div>\r\n    <Header />\r\n    <Switch>\r\n      <Route exact={true} path=\"/\" component={Home} />\r\n      <Suspense fallback={<Spinner />}>\r\n        <Route\r\n          path={`/:storyId`}\r\n          render={(props) => <StoryDetail {...props} />}\r\n        />\r\n      </Suspense>\r\n    </Switch>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nexport default Routes;\r\n","import { createHttpLink } from \"apollo-link-http\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { ApolloClient } from \"apollo-boost\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://the-mirror.herokuapp.com/api\",\r\n});\r\n\r\nconst cache = new InMemoryCache();\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache,\r\n});\r\n\r\nexport default client;\r\n","import React from \"react\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport { Colors } from \"./components/Common\";\r\nimport Routes from \"./routes\";\r\nimport client from \"./graphql\";\r\n\r\nimport TitilliumWebRegular from \"./font/TitilliumWeb-Regular.ttf\";\r\nimport TitilliumWebLight from \"./font/TitilliumWeb-Light.ttf\";\r\nimport TitilliumWebExtraLight from \"./font/TitilliumWeb-ExtraLight.ttf\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody{\r\n  padding:0px;\r\n  margin:0px;\r\n  @font-face{\r\n    font-family: Titillium Web Regular;\r\n    src:url(${TitilliumWebRegular});\r\n    font-weight:400;\r\n    font-style:normal;\r\n  };\r\n  @font-face{\r\n    font-family: Titillium Web Light;\r\n    src:url(${TitilliumWebLight});\r\n    font-weight:300;\r\n    font-style:normal;\r\n  };\r\n  @font-face{\r\n    font-family: Titillium Web Extra Light;\r\n    src:url(${TitilliumWebExtraLight});\r\n    font-weight:200;\r\n    font-style:normal;\r\n  };\r\n\r\n  font-family: Titillium Web Regular, Sans Serif ;\r\n  background-color:${Colors.White}\r\n}\r\n`;\r\nReactGA.initialize(\"UA-166254976-1\", { debug: true });\r\n\r\nReactGA.pageview(window.location.pathname + window.location.search);\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <GlobalStyle />\r\n          <Routes />\r\n        </div>\r\n      </BrowserRouter>\r\n    </ApolloProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as Sentry from \"@sentry/browser\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nif (process.env === \"production\") {\r\n  Sentry.init({\r\n    dsn: process.env.SENTRY_CLIENT_DSN,\r\n  });\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}